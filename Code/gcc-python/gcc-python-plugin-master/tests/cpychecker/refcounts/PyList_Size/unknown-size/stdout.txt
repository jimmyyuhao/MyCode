Trace 0:
  Transitions:
    'when PyList_Size() returns ob_size'
    'when PyList_Size() returns ob_size'
    'taking True path'
    'returning'
  Return value:
    repr(): ConcreteValue(gcctype='Py_ssize_t', loc=gcc.Location(file='tests/cpychecker/refcounts/PyList_Size/unknown-size/input.c', line=34), value=42)
    str(): (Py_ssize_t)42 from tests/cpychecker/refcounts/PyList_Size/unknown-size/input.c:34
  region for gcc.ParmDecl('list') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('list')")
    str(): region for gcc.ParmDecl('list') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyList_Size/unknown-size/input.c', line=27), region=Region("region-for-type-of-arg-gcc.ParmDecl('list')"))
  Exception:
    (struct PyObject *)0 from tests/cpychecker/refcounts/PyList_Size/unknown-size/input.c:28
