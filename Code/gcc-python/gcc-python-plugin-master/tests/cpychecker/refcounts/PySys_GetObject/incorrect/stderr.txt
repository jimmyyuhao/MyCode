In function 'test':
tests/cpychecker/refcounts/PySys_GetObject/incorrect/input.c:29:nn: warning: future use-after-free: ob_refcnt of return value is 1 too low [enabled by default]
tests/cpychecker/refcounts/PySys_GetObject/incorrect/input.c:29:nn: note: return value was allocated at:     return PySys_GetObject("foo");
tests/cpychecker/refcounts/PySys_GetObject/incorrect/input.c:29:nn: note: was expecting final owned ob_refcnt of return value to be 1 due to object being referenced by: return value but final ob_refcnt is refs: 0 owned, 1 borrowed
tests/cpychecker/refcounts/PySys_GetObject/incorrect/input.c:29:nn: note: when PySys_GetObject() succeeds at:     return PySys_GetObject("foo");
tests/cpychecker/refcounts/PySys_GetObject/incorrect/input.c:29:nn: note: ob_refcnt is now refs: 0 owned, 1 borrowed
tests/cpychecker/refcounts/PySys_GetObject/incorrect/input.c:29:nn: note: returning at:     return PySys_GetObject("foo");
tests/cpychecker/refcounts/PySys_GetObject/incorrect/input.c:29:nn: warning: returning (PyObject*)NULL without setting an exception [enabled by default]
tests/cpychecker/refcounts/PySys_GetObject/incorrect/input.c:29:nn: note: PySys_GetObject does not find string at:     return PySys_GetObject("foo");
tests/cpychecker/refcounts/PySys_GetObject/incorrect/input.c:29:nn: note: returning at:     return PySys_GetObject("foo");
tests/cpychecker/refcounts/PySys_GetObject/incorrect/input.c:28:nn: note: graphical error report for function 'test' written out to 'tests/cpychecker/refcounts/PySys_GetObject/incorrect/input.c.test-refcount-errors.html'
