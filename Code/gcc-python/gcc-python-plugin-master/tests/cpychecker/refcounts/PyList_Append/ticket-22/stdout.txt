Trace 0:
  Transitions:
    'when PyList_New() succeeds'
    'taking False path'
    'when treating unknown struct PyObject * from tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c:29 as non-NULL'
    'when PyList_Append() succeeds'
    'taking False path'
    'returning'
  Return value:
    repr(): PointerToRegion(gcctype='struct PyObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c', line=37), region=RegionOnHeap('PyListObject', gcc.Location(file='tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c', line=37)))
    str(): (struct PyObject *)&RegionOnHeap('PyListObject', gcc.Location(file='tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c', line=37)) from tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c:37
    r->ob_refcnt: refs: 1 owned
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c', line=37), region=RegionForGlobal(gcc.VarDecl('PyList_Type')))
  region for gcc.ParmDecl('self') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('self')")
    str(): region for gcc.ParmDecl('self') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c', line=32), region=Region("region-for-type-of-arg-gcc.ParmDecl('self')"))
  Exception:
    (struct PyObject *)0 from tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c:33

Trace 1:
  Transitions:
    'when PyList_New() succeeds'
    'taking False path'
    'when treating unknown struct PyObject * from tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c:29 as non-NULL'
    'when PyList_Append() fails'
    'taking True path'
    'when taking True path'
    'returning'
  Return value:
    repr(): ConcreteValue(gcctype='struct PyObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c', line=44), value=0)
    str(): (struct PyObject *)0 from tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c:44
  region for gcc.ParmDecl('self') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('self')")
    str(): region for gcc.ParmDecl('self') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c', line=32), region=Region("region-for-type-of-arg-gcc.ParmDecl('self')"))
  PyListObject allocated at tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c:37:
    repr(): RegionOnHeap('PyListObject', gcc.Location(file='tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c', line=37))
    str(): PyListObject allocated at tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c:37
    r->ob_refcnt: refs: 0 owned
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c', line=37), region=RegionForGlobal(gcc.VarDecl('PyList_Type')))
  Exception:
    (struct PyObject *)&RegionForGlobal(gcc.VarDecl('PyExc_MemoryError')) from tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c:42

Trace 2:
  Transitions:
    'when PyList_New() succeeds'
    'taking False path'
    'when treating unknown struct PyObject * from tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c:29 as non-NULL'
    'when PyList_Append() fails'
    'taking True path'
    'when taking False path'
    'calling tp_dealloc on PyListObject allocated at tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c:37'
    'returning'
  Return value:
    repr(): ConcreteValue(gcctype='struct PyObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c', line=44), value=0)
    str(): (struct PyObject *)0 from tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c:44
  region for gcc.ParmDecl('self') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('self')")
    str(): region for gcc.ParmDecl('self') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c', line=32), region=Region("region-for-type-of-arg-gcc.ParmDecl('self')"))
  PyListObject allocated at tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c:37:
    repr(): RegionOnHeap('PyListObject', gcc.Location(file='tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c', line=37))
    str(): PyListObject allocated at tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c:37
    r->ob_refcnt: None
    r->ob_type: None
  Exception:
    (struct PyObject *)&RegionForGlobal(gcc.VarDecl('PyExc_MemoryError')) from tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c:42

Trace 3:
  Transitions:
    'when PyList_New() succeeds'
    'taking False path'
    'when treating unknown struct PyObject * from tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c:29 as NULL'
    'returning -1 from PyList_Append() due to NULL item'
    'taking True path'
    'when taking True path'
    'returning'
  Return value:
    repr(): ConcreteValue(gcctype='struct PyObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c', line=44), value=0)
    str(): (struct PyObject *)0 from tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c:44
  region for gcc.ParmDecl('self') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('self')")
    str(): region for gcc.ParmDecl('self') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c', line=32), region=Region("region-for-type-of-arg-gcc.ParmDecl('self')"))
  PyListObject allocated at tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c:37:
    repr(): RegionOnHeap('PyListObject', gcc.Location(file='tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c', line=37))
    str(): PyListObject allocated at tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c:37
    r->ob_refcnt: refs: 0 owned
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c', line=37), region=RegionForGlobal(gcc.VarDecl('PyList_Type')))
  Exception:
    (struct PyObject *)&RegionForGlobal(gcc.VarDecl('PyExc_SystemError')) from tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c:42

Trace 4:
  Transitions:
    'when PyList_New() succeeds'
    'taking False path'
    'when treating unknown struct PyObject * from tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c:29 as NULL'
    'returning -1 from PyList_Append() due to NULL item'
    'taking True path'
    'when taking False path'
    'calling tp_dealloc on PyListObject allocated at tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c:37'
    'returning'
  Return value:
    repr(): ConcreteValue(gcctype='struct PyObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c', line=44), value=0)
    str(): (struct PyObject *)0 from tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c:44
  region for gcc.ParmDecl('self') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('self')")
    str(): region for gcc.ParmDecl('self') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c', line=32), region=Region("region-for-type-of-arg-gcc.ParmDecl('self')"))
  PyListObject allocated at tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c:37:
    repr(): RegionOnHeap('PyListObject', gcc.Location(file='tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c', line=37))
    str(): PyListObject allocated at tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c:37
    r->ob_refcnt: None
    r->ob_type: None
  Exception:
    (struct PyObject *)&RegionForGlobal(gcc.VarDecl('PyExc_SystemError')) from tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c:42

Trace 5:
  Transitions:
    'when PyList_New() fails'
    'taking True path'
    'returning'
  Return value:
    repr(): ConcreteValue(gcctype='struct PyObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c', line=39), value=0)
    str(): (struct PyObject *)0 from tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c:39
  region for gcc.ParmDecl('self') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('self')")
    str(): region for gcc.ParmDecl('self') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c', line=32), region=Region("region-for-type-of-arg-gcc.ParmDecl('self')"))
  Exception:
    (struct PyObject *)&RegionForGlobal(gcc.VarDecl('PyExc_MemoryError')) from tests/cpychecker/refcounts/PyList_Append/ticket-22/input.c:37
