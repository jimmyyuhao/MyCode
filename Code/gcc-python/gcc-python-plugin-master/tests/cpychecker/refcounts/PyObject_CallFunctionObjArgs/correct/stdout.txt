Trace 0:
  Transitions:
    'when PyObject_CallFunctionObjArgs() succeeds'
    'returning'
  Return value:
    repr(): PointerToRegion(gcctype='struct PyObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyObject_CallFunctionObjArgs/correct/input.c', line=34), region=RegionOnHeap('new ref from call to PyObject_CallFunctionObjArgs', gcc.Location(file='tests/cpychecker/refcounts/PyObject_CallFunctionObjArgs/correct/input.c', line=34)))
    str(): (struct PyObject *)&RegionOnHeap('new ref from call to PyObject_CallFunctionObjArgs', gcc.Location(file='tests/cpychecker/refcounts/PyObject_CallFunctionObjArgs/correct/input.c', line=34)) from tests/cpychecker/refcounts/PyObject_CallFunctionObjArgs/correct/input.c:34
    r->ob_refcnt: refs: 1 owned
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyObject_CallFunctionObjArgs/correct/input.c', line=34), region=Region('PyTypeObject for new ref from call to PyObject_CallFunctionObjArgs'))
  region for gcc.ParmDecl('callable') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('callable')")
    str(): region for gcc.ParmDecl('callable') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyObject_CallFunctionObjArgs/correct/input.c', line=32), region=Region("region-for-type-of-arg-gcc.ParmDecl('callable')"))
  region for gcc.ParmDecl('a') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('a')")
    str(): region for gcc.ParmDecl('a') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyObject_CallFunctionObjArgs/correct/input.c', line=32), region=Region("region-for-type-of-arg-gcc.ParmDecl('a')"))
  region for gcc.ParmDecl('b') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('b')")
    str(): region for gcc.ParmDecl('b') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyObject_CallFunctionObjArgs/correct/input.c', line=32), region=Region("region-for-type-of-arg-gcc.ParmDecl('b')"))
  Exception:
    (struct PyObject *)0 from tests/cpychecker/refcounts/PyObject_CallFunctionObjArgs/correct/input.c:33

Trace 1:
  Transitions:
    'when PyObject_CallFunctionObjArgs() fails'
    'returning'
  Return value:
    repr(): ConcreteValue(gcctype='struct PyObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyObject_CallFunctionObjArgs/correct/input.c', line=34), value=0)
    str(): (struct PyObject *)0 from tests/cpychecker/refcounts/PyObject_CallFunctionObjArgs/correct/input.c:34
  region for gcc.ParmDecl('callable') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('callable')")
    str(): region for gcc.ParmDecl('callable') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyObject_CallFunctionObjArgs/correct/input.c', line=32), region=Region("region-for-type-of-arg-gcc.ParmDecl('callable')"))
  region for gcc.ParmDecl('a') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('a')")
    str(): region for gcc.ParmDecl('a') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyObject_CallFunctionObjArgs/correct/input.c', line=32), region=Region("region-for-type-of-arg-gcc.ParmDecl('a')"))
  region for gcc.ParmDecl('b') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('b')")
    str(): region for gcc.ParmDecl('b') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyObject_CallFunctionObjArgs/correct/input.c', line=32), region=Region("region-for-type-of-arg-gcc.ParmDecl('b')"))
  Exception:
    (struct PyObject *)&RegionForGlobal(gcc.VarDecl('PyExc_MemoryError')) from tests/cpychecker/refcounts/PyObject_CallFunctionObjArgs/correct/input.c:34
