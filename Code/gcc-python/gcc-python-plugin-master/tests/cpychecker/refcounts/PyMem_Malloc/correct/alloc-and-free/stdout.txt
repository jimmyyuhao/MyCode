Trace 0:
  Transitions:
    'when PyMem_Malloc() succeeds'
    'taking False path'
    'calling PyMem_Free on PyMem_Malloc allocated at tests/cpychecker/refcounts/PyMem_Malloc/correct/alloc-and-free/input.c:31'
    'returning'
  Return value:
    repr(): PointerToRegion(gcctype='struct PyObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyMem_Malloc/correct/alloc-and-free/input.c', line=41), region=RegionForGlobal(gcc.VarDecl('_Py_NoneStruct')))
    str(): (struct PyObject *)&RegionForGlobal(gcc.VarDecl('_Py_NoneStruct')) from tests/cpychecker/refcounts/PyMem_Malloc/correct/alloc-and-free/input.c:41
    r->ob_refcnt: refs: 1 owned, 1 borrowed
    r->ob_type: None
  region for gcc.ParmDecl('self') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('self')")
    str(): region for gcc.ParmDecl('self') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyMem_Malloc/correct/alloc-and-free/input.c', line=29), region=Region("region-for-type-of-arg-gcc.ParmDecl('self')"))
  region for gcc.ParmDecl('args') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('args')")
    str(): region for gcc.ParmDecl('args') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyMem_Malloc/correct/alloc-and-free/input.c', line=29), region=Region("region-for-type-of-arg-gcc.ParmDecl('args')"))
  Exception:
    (struct PyObject *)0 from tests/cpychecker/refcounts/PyMem_Malloc/correct/alloc-and-free/input.c:30

Trace 1:
  Transitions:
    'when PyMem_Malloc() fails'
    'taking True path'
    'PyErr_NoMemory() returns NULL, raising MemoryError'
    'returning'
  Return value:
    repr(): ConcreteValue(gcctype='struct PyObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyMem_Malloc/correct/alloc-and-free/input.c', line=34), value=0)
    str(): (struct PyObject *)0 from tests/cpychecker/refcounts/PyMem_Malloc/correct/alloc-and-free/input.c:34
  region for gcc.ParmDecl('self') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('self')")
    str(): region for gcc.ParmDecl('self') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyMem_Malloc/correct/alloc-and-free/input.c', line=29), region=Region("region-for-type-of-arg-gcc.ParmDecl('self')"))
  region for gcc.ParmDecl('args') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('args')")
    str(): region for gcc.ParmDecl('args') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyMem_Malloc/correct/alloc-and-free/input.c', line=29), region=Region("region-for-type-of-arg-gcc.ParmDecl('args')"))
  Exception:
    (struct PyObject *)&RegionForGlobal(gcc.VarDecl('PyExc_MemoryError')) from tests/cpychecker/refcounts/PyMem_Malloc/correct/alloc-and-free/input.c:34
