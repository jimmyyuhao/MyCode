In function 'test':
tests/cpychecker/refcounts/attributes/steals-reference-to-arg/incorrect-usage/input.c:63:nn: warning: future use-after-free: ob_refcnt of return value is 1 too low [enabled by default]
tests/cpychecker/refcounts/attributes/steals-reference-to-arg/incorrect-usage/input.c:44:nn: note: return value was allocated at:     obj = PyLong_FromLong(42);
tests/cpychecker/refcounts/attributes/steals-reference-to-arg/incorrect-usage/input.c:63:nn: note: was expecting final owned ob_refcnt of return value to be 1 due to object being referenced by: return value but final ob_refcnt is refs: 0 owned, 1 borrowed
tests/cpychecker/refcounts/attributes/steals-reference-to-arg/incorrect-usage/input.c:44:nn: note: when PyLong_FromLong() succeeds at:     obj = PyLong_FromLong(42);
tests/cpychecker/refcounts/attributes/steals-reference-to-arg/incorrect-usage/input.c:44:nn: note: ob_refcnt is now refs: 1 owned
tests/cpychecker/refcounts/attributes/steals-reference-to-arg/incorrect-usage/input.c:45:nn: note: taking False path at:     if (!obj) {
tests/cpychecker/refcounts/attributes/steals-reference-to-arg/incorrect-usage/input.c:55:nn: note: reaching:     foo(obj);
tests/cpychecker/refcounts/attributes/steals-reference-to-arg/incorrect-usage/input.c:55:nn: note: ob_refcnt is now refs: 0 owned, 1 borrowed
tests/cpychecker/refcounts/attributes/steals-reference-to-arg/incorrect-usage/input.c:63:nn: note: returning
tests/cpychecker/refcounts/attributes/steals-reference-to-arg/incorrect-usage/input.c:41:nn: note: graphical error report for function 'test' written out to 'tests/cpychecker/refcounts/attributes/steals-reference-to-arg/incorrect-usage/input.c.test-refcount-errors.html'
