In function 'passing_dead_object_to_function':
tests/cpychecker/refcounts/passing_dead_object/input.c:45:nn: warning: passing pointer to deallocated memory as argument 1 of function at tests/cpychecker/refcounts/passing_dead_object/input.c:45: memory deallocated at tests/cpychecker/refcounts/passing_dead_object/input.c:42 [enabled by default]
tests/cpychecker/refcounts/passing_dead_object/input.c:32:nn: note: when PyLong_FromLong() succeeds at:     PyObject *tmp = PyLong_FromLong(0x1000);
tests/cpychecker/refcounts/passing_dead_object/input.c:34:nn: note: taking False path at:     if (!tmp) {
tests/cpychecker/refcounts/passing_dead_object/input.c:42:nn: note: reaching:     Py_DECREF(tmp);
tests/cpychecker/refcounts/passing_dead_object/input.c:42:nn: note: when taking False path at:     Py_DECREF(tmp);
tests/cpychecker/refcounts/passing_dead_object/input.c:42:nn: note: reaching:     Py_DECREF(tmp);
tests/cpychecker/refcounts/passing_dead_object/input.c:42:nn: note: calling tp_dealloc on PyLongObject allocated at tests/cpychecker/refcounts/passing_dead_object/input.c:32 at:     Py_DECREF(tmp);
tests/cpychecker/refcounts/passing_dead_object/input.c:45:nn: note: reaching:     foo(tmp);
tests/cpychecker/refcounts/passing_dead_object/input.c:30:nn: note: graphical error report for function 'passing_dead_object_to_function' written out to 'tests/cpychecker/refcounts/passing_dead_object/input.c.passing_dead_object_to_function-refcount-errors.html'
