In function 'test':
tests/cpychecker/refcounts/storage_regions/static/incorrect/input.c:49:nn: warning: future use-after-free: ob_refcnt of return value is 1 too low [enabled by default]
tests/cpychecker/refcounts/storage_regions/static/incorrect/input.c:36:nn: note: return value was allocated at:         cache = PyLong_FromLong(0x1000);
tests/cpychecker/refcounts/storage_regions/static/incorrect/input.c:49:nn: note: was expecting final owned ob_refcnt of return value to be 2 due to object being referenced by: return value, cache but final ob_refcnt is refs: 1 owned
tests/cpychecker/refcounts/storage_regions/static/incorrect/input.c:30:nn: note: when treating unknown struct PyObject * from tests/cpychecker/refcounts/storage_regions/static/incorrect/input.c:24 as NULL at:     if (!cache) {
tests/cpychecker/refcounts/storage_regions/static/incorrect/input.c:30:nn: note: taking True path at:     if (!cache) {
tests/cpychecker/refcounts/storage_regions/static/incorrect/input.c:36:nn: note: reaching:         cache = PyLong_FromLong(0x1000);
tests/cpychecker/refcounts/storage_regions/static/incorrect/input.c:36:nn: note: when PyLong_FromLong() succeeds at:         cache = PyLong_FromLong(0x1000);
tests/cpychecker/refcounts/storage_regions/static/incorrect/input.c:36:nn: note: ob_refcnt is now refs: 1 owned
tests/cpychecker/refcounts/storage_regions/static/incorrect/input.c:36:nn: note: return value is now referenced by 1 non-stack value(s): cache
tests/cpychecker/refcounts/storage_regions/static/incorrect/input.c:37:nn: note: taking False path at:         if (!cache) {
tests/cpychecker/refcounts/storage_regions/static/incorrect/input.c:49:nn: note: reaching:     return cache;
tests/cpychecker/refcounts/storage_regions/static/incorrect/input.c:49:nn: note: returning
tests/cpychecker/refcounts/storage_regions/static/incorrect/input.c:24:nn: note: graphical error report for function 'test' written out to 'tests/cpychecker/refcounts/storage_regions/static/incorrect/input.c.test-refcount-errors.html'
