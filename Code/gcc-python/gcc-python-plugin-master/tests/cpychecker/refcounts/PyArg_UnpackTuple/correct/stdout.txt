Trace 0:
  Transitions:
    'when PyArg_UnpackTuple() fails'
    'taking True path'
    'returning'
  Return value:
    repr(): ConcreteValue(gcctype='struct PyObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=34), value=0)
    str(): (struct PyObject *)0 from tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:34
  region for gcc.ParmDecl('self') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('self')")
    str(): region for gcc.ParmDecl('self') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=27), region=Region("region-for-type-of-arg-gcc.ParmDecl('self')"))
  region for gcc.ParmDecl('args') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('args')")
    str(): region for gcc.ParmDecl('args') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=27), region=Region("region-for-type-of-arg-gcc.ParmDecl('args')"))
  RegionForGlobal(gcc.VarDecl('_Py_NoneStruct')):
    repr(): RegionForGlobal(gcc.VarDecl('_Py_NoneStruct'))
    str(): RegionForGlobal(gcc.VarDecl('_Py_NoneStruct'))
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: None
  Exception:
    (struct PyObject *)&RegionForGlobal(gcc.VarDecl('PyExc_TypeError')) from tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:33

Trace 1:
  Transitions:
    'when PyArg_UnpackTuple() successfully unpacks 1 argument(s)'
    'taking False path'
    'when PyTuple_Pack() succeeds'
    'returning'
  Return value:
    repr(): PointerToRegion(gcctype='struct PyObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=37), region=RegionOnHeap('PyTupleObject', gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=37)))
    str(): (struct PyObject *)&RegionOnHeap('PyTupleObject', gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=37)) from tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:37
    r->ob_refcnt: refs: 1 owned
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=37), region=RegionForGlobal(gcc.VarDecl('PyTuple_Type')))
  region for gcc.ParmDecl('self') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('self')")
    str(): region for gcc.ParmDecl('self') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=27), region=Region("region-for-type-of-arg-gcc.ParmDecl('self')"))
  region for gcc.ParmDecl('args') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('args')")
    str(): region for gcc.ParmDecl('args') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=27), region=Region("region-for-type-of-arg-gcc.ParmDecl('args')"))
  RegionForGlobal(gcc.VarDecl('_Py_NoneStruct')):
    repr(): RegionForGlobal(gcc.VarDecl('_Py_NoneStruct'))
    str(): RegionForGlobal(gcc.VarDecl('_Py_NoneStruct'))
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: None
  argument 1 allocated at tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:33:
    repr(): RegionOnHeap('argument 1', gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=33))
    str(): argument 1 allocated at tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:33
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=33), region=Region('PyTypeObject for argument 1'))
  Exception:
    (struct PyObject *)0 from tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:28

Trace 2:
  Transitions:
    'when PyArg_UnpackTuple() successfully unpacks 1 argument(s)'
    'taking False path'
    'when PyTuple_Pack() fails'
    'returning'
  Return value:
    repr(): ConcreteValue(gcctype='struct PyObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=37), value=0)
    str(): (struct PyObject *)0 from tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:37
  region for gcc.ParmDecl('self') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('self')")
    str(): region for gcc.ParmDecl('self') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=27), region=Region("region-for-type-of-arg-gcc.ParmDecl('self')"))
  region for gcc.ParmDecl('args') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('args')")
    str(): region for gcc.ParmDecl('args') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=27), region=Region("region-for-type-of-arg-gcc.ParmDecl('args')"))
  RegionForGlobal(gcc.VarDecl('_Py_NoneStruct')):
    repr(): RegionForGlobal(gcc.VarDecl('_Py_NoneStruct'))
    str(): RegionForGlobal(gcc.VarDecl('_Py_NoneStruct'))
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: None
  argument 1 allocated at tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:33:
    repr(): RegionOnHeap('argument 1', gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=33))
    str(): argument 1 allocated at tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:33
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=33), region=Region('PyTypeObject for argument 1'))
  Exception:
    (struct PyObject *)&RegionForGlobal(gcc.VarDecl('PyExc_MemoryError')) from tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:37

Trace 3:
  Transitions:
    'when PyArg_UnpackTuple() successfully unpacks 2 argument(s)'
    'taking False path'
    'when PyTuple_Pack() succeeds'
    'returning'
  Return value:
    repr(): PointerToRegion(gcctype='struct PyObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=37), region=RegionOnHeap('PyTupleObject', gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=37)))
    str(): (struct PyObject *)&RegionOnHeap('PyTupleObject', gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=37)) from tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:37
    r->ob_refcnt: refs: 1 owned
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=37), region=RegionForGlobal(gcc.VarDecl('PyTuple_Type')))
  region for gcc.ParmDecl('self') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('self')")
    str(): region for gcc.ParmDecl('self') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=27), region=Region("region-for-type-of-arg-gcc.ParmDecl('self')"))
  region for gcc.ParmDecl('args') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('args')")
    str(): region for gcc.ParmDecl('args') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=27), region=Region("region-for-type-of-arg-gcc.ParmDecl('args')"))
  RegionForGlobal(gcc.VarDecl('_Py_NoneStruct')):
    repr(): RegionForGlobal(gcc.VarDecl('_Py_NoneStruct'))
    str(): RegionForGlobal(gcc.VarDecl('_Py_NoneStruct'))
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: None
  argument 1 allocated at tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:33:
    repr(): RegionOnHeap('argument 1', gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=33))
    str(): argument 1 allocated at tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:33
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=33), region=Region('PyTypeObject for argument 1'))
  argument 2 allocated at tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:33:
    repr(): RegionOnHeap('argument 2', gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=33))
    str(): argument 2 allocated at tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:33
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=33), region=Region('PyTypeObject for argument 2'))
  Exception:
    (struct PyObject *)0 from tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:28

Trace 4:
  Transitions:
    'when PyArg_UnpackTuple() successfully unpacks 2 argument(s)'
    'taking False path'
    'when PyTuple_Pack() fails'
    'returning'
  Return value:
    repr(): ConcreteValue(gcctype='struct PyObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=37), value=0)
    str(): (struct PyObject *)0 from tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:37
  region for gcc.ParmDecl('self') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('self')")
    str(): region for gcc.ParmDecl('self') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=27), region=Region("region-for-type-of-arg-gcc.ParmDecl('self')"))
  region for gcc.ParmDecl('args') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('args')")
    str(): region for gcc.ParmDecl('args') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=27), region=Region("region-for-type-of-arg-gcc.ParmDecl('args')"))
  RegionForGlobal(gcc.VarDecl('_Py_NoneStruct')):
    repr(): RegionForGlobal(gcc.VarDecl('_Py_NoneStruct'))
    str(): RegionForGlobal(gcc.VarDecl('_Py_NoneStruct'))
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: None
  argument 1 allocated at tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:33:
    repr(): RegionOnHeap('argument 1', gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=33))
    str(): argument 1 allocated at tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:33
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=33), region=Region('PyTypeObject for argument 1'))
  argument 2 allocated at tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:33:
    repr(): RegionOnHeap('argument 2', gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=33))
    str(): argument 2 allocated at tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:33
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=33), region=Region('PyTypeObject for argument 2'))
  Exception:
    (struct PyObject *)&RegionForGlobal(gcc.VarDecl('PyExc_MemoryError')) from tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:37

Trace 5:
  Transitions:
    'when PyArg_UnpackTuple() successfully unpacks 3 argument(s)'
    'taking False path'
    'when PyTuple_Pack() succeeds'
    'returning'
  Return value:
    repr(): PointerToRegion(gcctype='struct PyObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=37), region=RegionOnHeap('PyTupleObject', gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=37)))
    str(): (struct PyObject *)&RegionOnHeap('PyTupleObject', gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=37)) from tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:37
    r->ob_refcnt: refs: 1 owned
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=37), region=RegionForGlobal(gcc.VarDecl('PyTuple_Type')))
  region for gcc.ParmDecl('self') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('self')")
    str(): region for gcc.ParmDecl('self') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=27), region=Region("region-for-type-of-arg-gcc.ParmDecl('self')"))
  region for gcc.ParmDecl('args') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('args')")
    str(): region for gcc.ParmDecl('args') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=27), region=Region("region-for-type-of-arg-gcc.ParmDecl('args')"))
  RegionForGlobal(gcc.VarDecl('_Py_NoneStruct')):
    repr(): RegionForGlobal(gcc.VarDecl('_Py_NoneStruct'))
    str(): RegionForGlobal(gcc.VarDecl('_Py_NoneStruct'))
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: None
  argument 1 allocated at tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:33:
    repr(): RegionOnHeap('argument 1', gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=33))
    str(): argument 1 allocated at tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:33
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=33), region=Region('PyTypeObject for argument 1'))
  argument 2 allocated at tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:33:
    repr(): RegionOnHeap('argument 2', gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=33))
    str(): argument 2 allocated at tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:33
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=33), region=Region('PyTypeObject for argument 2'))
  argument 3 allocated at tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:33:
    repr(): RegionOnHeap('argument 3', gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=33))
    str(): argument 3 allocated at tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:33
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=33), region=Region('PyTypeObject for argument 3'))
  Exception:
    (struct PyObject *)0 from tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:28

Trace 6:
  Transitions:
    'when PyArg_UnpackTuple() successfully unpacks 3 argument(s)'
    'taking False path'
    'when PyTuple_Pack() fails'
    'returning'
  Return value:
    repr(): ConcreteValue(gcctype='struct PyObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=37), value=0)
    str(): (struct PyObject *)0 from tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:37
  region for gcc.ParmDecl('self') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('self')")
    str(): region for gcc.ParmDecl('self') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=27), region=Region("region-for-type-of-arg-gcc.ParmDecl('self')"))
  region for gcc.ParmDecl('args') on stack:
    repr(): RegionOnStack("region for gcc.ParmDecl('args')")
    str(): region for gcc.ParmDecl('args') on stack
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=27), region=Region("region-for-type-of-arg-gcc.ParmDecl('args')"))
  RegionForGlobal(gcc.VarDecl('_Py_NoneStruct')):
    repr(): RegionForGlobal(gcc.VarDecl('_Py_NoneStruct'))
    str(): RegionForGlobal(gcc.VarDecl('_Py_NoneStruct'))
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: None
  argument 1 allocated at tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:33:
    repr(): RegionOnHeap('argument 1', gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=33))
    str(): argument 1 allocated at tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:33
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=33), region=Region('PyTypeObject for argument 1'))
  argument 2 allocated at tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:33:
    repr(): RegionOnHeap('argument 2', gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=33))
    str(): argument 2 allocated at tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:33
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=33), region=Region('PyTypeObject for argument 2'))
  argument 3 allocated at tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:33:
    repr(): RegionOnHeap('argument 3', gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=33))
    str(): argument 3 allocated at tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:33
    r->ob_refcnt: refs: 0 owned, 1 borrowed
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c', line=33), region=Region('PyTypeObject for argument 3'))
  Exception:
    (struct PyObject *)&RegionForGlobal(gcc.VarDecl('PyExc_MemoryError')) from tests/cpychecker/refcounts/PyArg_UnpackTuple/correct/input.c:37
